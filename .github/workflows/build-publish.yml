name: Publish Maven Package

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - verta/main
      - 'release/*'

permissions:
  contents: write  # Read is is required for actions/checkout, write is required to comment on commits
  packages: write
  statuses: write
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # need previous commit to find PR head commit info 
        fetch-depth: 2

    - name: Get branch names
      id: branch_names
      uses: tj-actions/branch-names@v7

    - name: Get docker image tag
      id: image_info
      run: |
        branch=$(echo ${{ steps.branch_names.outputs.current_branch }} | sed 's,/,_,g')
        # PRs checkout a merge of PR head with target. Branches checkout current head of branch.
        # When in a PR, use the PR head commit sha instead of the checkout commit sha.
        pr_sha="${{ github.event.pull_request.head.sha }}"
        sha=${pr_sha:-$GITHUB_SHA}
        sha_details=$(TZ=UTC git show -s --format=%cd--%h --date='format-local:%Y-%m-%dT%H-%M-%S' --abbrev=7 $sha)
        echo "sha=${sha}" >> $GITHUB_OUTPUT
        echo "tag=${branch}-${sha_details}" >> $GITHUB_OUTPUT
          
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
        cache: 'maven'
        server-id: github-verta # Value of the distributionManagement/repository/id field of the pom.xml
  
    - name: Build and Publish to GitHub Packages Apache Maven
      id: build_and_publish
      run: ./verta_build_and_publish.sh
      env:
        GITHUB_TOKEN: ${{ github.token }}
        BRANCH_NAME: ${{ steps.branch_names.outputs.current_branch }}
        SHA: ${{ steps.image_info.outputs.sha }}

    - name: Create commit comment
      uses: peter-evans/commit-comment@v2
      with:
        body: "Maven Version: ${{ steps.build_and_publish.outputs.project_version }}"

    - name: Docker image status update
      uses: ouzi-dev/commit-status-updater@v2
      with:
        name: "Version: ${{ steps.build_and_publish.outputs.project_version }}"
        url: "${{ github.server_url }}/${{ github.repository }}/commit/${{ steps.image_info.outputs.sha }}#comments"
        status: success

